services:
  db:
    image: postgres
    container_name: pg
    tty: true
    env_file:
      - .env
    restart: on-failure
    networks:
      - postgres
    ports:
      - 3333:5432
  db_test:
    image: postgres
    container_name: pg_test
    tty: true
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: on-failure
    networks:
      - postgres
    ports:
      - 4444:5432
  zookeeper:
    image: wurstmeister/zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    healthcheck:
      test: echo stat | nc localhost 2181
      interval: 10s
      timeout: 10s
      retries: 3
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
  kafka1:
    container_name: kafka1
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9091:9091"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: INSIDE://kafka1:19091,OUTSIDE://0.0.0.0:9091
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka1:19091,OUTSIDE://localhost:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  kafka2:
    container_name: kafka2
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_LISTENERS: INSIDE://kafka2:19092,OUTSIDE://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka2:19092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  kafka3:
    container_name: kafka3
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_LISTENERS: INSIDE://kafka3:19093,OUTSIDE://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka3:19093,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
     -  telemetry
    ports:
      - "3000:3000"
    volumes:
      - ./godoc/grafana/grafana.ini:/etc/grafana/grafana.ini

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    networks:
      - telemetry
    ports:
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "16686:16686"
    healthcheck:
      test: [ "CMD", "curl", "-X", "GET", "localhost:14268/health" ]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      - telemetry
    ports:
      - "9090:9090"
    volumes:
      - ./godoc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

networks:
  postgres:
    driver: bridge
  telemetry: