services:
#  NOTES:
#  1) POSTGRES_HOST should be equal to service - "db"
#  2) Чтобы сохранять состояния бд между запусками следует раскоментить pgdata
#  Однако в таком случае следует удалять волюм при малейшем изменении,
#  т.к это может вызвать много разных ошибок причину которых будет тяжело понять:
#  Scripts in pgdata directory only run during the initial configuration
#  of the database. So if the data folder we defined in the volumes section
#  is not empty, it will not work.
#  3) Чтобы настроить постгрю на докере нужно запустить postgres IMAGE
#  в докер десктопе и прописать env var postgres_password = postgres
#  Подключиться через docker exec к контейнеру и создать пользователя
#  4) Порты - порты не следует задавать вообще, у db и db_test в конфиге
#  порт должны быть одинаковыми - 5432, т.к хостом является контейнер db и db_test
  app:
    container_name: go
    build: .
#    command: tail -F anything takes 5s to remove container
#    use ENTRYPOINT ["./bin/cli"] instead
    restart: on-failure
    depends_on:
      - db
      - db_test
    networks:
      - db_postgres
      - db_test_postgres

  db:
    image: postgres
    container_name: pg
    tty: true
    env_file:
      - .env
    restart: on-failure
    networks:
      - db_postgres

  db_test:
    image: postgres
    container_name: pg_test
    tty: true
    environment:
      POSTGRES_USER: ${TEST_USER}
      POSTGRES_PASSWORD: ${TEST_PASSWORD}
      POSTGRES_DB: ${TEST_DB}
    restart: on-failure
    networks:
      - db_test_postgres

networks:
  db_postgres:
    driver: bridge
  db_test_postgres:
    driver: bridge