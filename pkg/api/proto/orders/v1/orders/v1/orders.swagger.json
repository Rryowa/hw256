{
  "swagger": "2.0",
  "info": {
    "title": "orders/v1/orders.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "OrderService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/accept-order": {
      "post": {
        "operationId": "OrderService_AcceptOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/OrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AcceptOrderRequest"
            }
          }
        ],
        "tags": [
          "OrderService"
        ]
      }
    },
    "/v1/accept-return/{id}/{userId}": {
      "patch": {
        "operationId": "OrderService_AcceptReturn",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/OrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderServiceAcceptReturnBody"
            }
          }
        ],
        "tags": [
          "OrderService"
        ]
      }
    },
    "/v1/issue/{ids}": {
      "patch": {
        "operationId": "OrderService_IssueOrders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/OrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderServiceIssueOrdersBody"
            }
          }
        ],
        "tags": [
          "OrderService"
        ]
      }
    },
    "/v1/list-orders/{userId}": {
      "get": {
        "operationId": "OrderService_ListOrders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListOrdersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrderService"
        ]
      }
    },
    "/v1/list-returns": {
      "get": {
        "operationId": "OrderService_ListReturns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListReturnsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrderService"
        ]
      }
    },
    "/v1/return/{id}": {
      "delete": {
        "operationId": "OrderService_ReturnOrderToCourier",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/OrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OrderService"
        ]
      }
    }
  },
  "definitions": {
    "AcceptOrderRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "price": {
          "type": "string"
        },
        "weight": {
          "type": "string"
        }
      }
    },
    "ListOrdersResponse": {
      "type": "object",
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Order"
          }
        }
      }
    },
    "ListReturnsResponse": {
      "type": "object",
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Order"
          }
        }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "storageUntil": {
          "type": "string",
          "format": "date-time"
        },
        "issued": {
          "type": "boolean"
        },
        "issuedAt": {
          "type": "string",
          "format": "date-time"
        },
        "returned": {
          "type": "boolean"
        },
        "orderPrice": {
          "type": "number",
          "format": "double"
        },
        "weight": {
          "type": "number",
          "format": "double"
        },
        "packageType": {
          "type": "string"
        },
        "packagePrice": {
          "type": "number",
          "format": "double"
        },
        "hash": {
          "type": "string"
        }
      }
    },
    "OrderResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "OrderServiceAcceptReturnBody": {
      "type": "object"
    },
    "OrderServiceIssueOrdersBody": {
      "type": "object"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
